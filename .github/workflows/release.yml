name: Release

on: 
  workflow_dispatch:
    inputs:
      version:
        description: Version
        default: v0.0.0
        required: true

jobs:
  Release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set permissions
      run: |
        echo "## Set permissions"

        echo "# Changing permissions *.sh"
        find . -type f -name '*.sh' -exec chmod a+x {} \;
        echo "# Changing permissions *.py"
        find . -type f -name '*.py' -exec chmod a+x {} \;

        printf "\n\n"

    - name: Set enviornment variables
      run: ./_scripts/enviornment_vars.sh github

    - name: Setup Jekyll
      run: ./_scripts/install_jekyll.sh

    - name: Build
      run: ./_scripts/build_site.sh

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_site

    - name: Install LaTeX
      run: ./_scripts/install_latex.sh

    - name: Install pandoc
      run: ./_scripts/install_pandoc.sh

    - name: HTML to TEX
      run: ./_scripts/html_to_tex.sh desktop

    - name: TEX to PDF
      run: ./_scripts/tex_to_pdf.sh

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PUBLISH_NAME }}
        path: |
          ./${{ env.BOOK_DIR }}/${{ env.PUBLISH_NAME }}.tex
          ./${{ env.BOOK_DIR }}/${{ env.PUBLISH_NAME }}.pdf
          ./${{ env.BOOK_DIR }}/${{ env.BOOK_HTML }}

    - name: Create Tag
      run: |
        git tag ${{ github.event.inputs.version }}
        git push origin --tags

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: ${{ github.event.inputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./${{ env.BOOK_DIR }}/${{ env.PUBLISH_NAME }}.pdf
        asset_name: ${{ env.PUBLISH_NAME }}.pdf
        asset_content_type: application/pdf
